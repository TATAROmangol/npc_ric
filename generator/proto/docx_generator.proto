syntax = "proto3";

service DocxGenerator {
  // Для админа
  rpc UploadTemplate (UploadTemplateRequest) returns (Response);
  
  // Для пользователя
  rpc GenerateDocx (GenerateRequest) returns (GenerateResponse);
}

// Запрос на добавление шаблона
message UploadTemplateRequest {
  string name = 1;          // "contract", "report" и т.д.
  bytes docx_content = 2;   // Бинарные данные файла
}

// Запрос на генерацию
message GenerateRequest {
  string template_name = 1; // Имя шаблона из БД
  TableData table = 2;      // Данные для вставки (см. ниже)
}

// Ответ с готовым файлом
message GenerateResponse {
  bytes result_docx = 1;    // Готовый DOCX
}

// Структура таблицы (аналог от Go-разработчика)
message TableData {
  repeated string columns = 1;
  repeated Row rows = 2;
}

message Row {
  repeated string values = 1;
}

message Response {
  string status = 1;
}