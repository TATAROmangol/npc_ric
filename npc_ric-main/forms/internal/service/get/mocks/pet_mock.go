// Code generated by MockGen. DO NOT EDIT.
// Source: get.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entities "forms/internal/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGetRepo is a mock of GetRepo interface.
type MockGetRepo struct {
	ctrl     *gomock.Controller
	recorder *MockGetRepoMockRecorder
}

// MockGetRepoMockRecorder is the mock recorder for MockGetRepo.
type MockGetRepoMockRecorder struct {
	mock *MockGetRepo
}

// NewMockGetRepo creates a new mock instance.
func NewMockGetRepo(ctrl *gomock.Controller) *MockGetRepo {
	mock := &MockGetRepo{ctrl: ctrl}
	mock.recorder = &MockGetRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetRepo) EXPECT() *MockGetRepoMockRecorder {
	return m.recorder
}

// GetFormColumns mocks base method.
func (m *MockGetRepo) GetFormColumns(ctx context.Context, id int) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFormColumns", ctx, id)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFormColumns indicates an expected call of GetFormColumns.
func (mr *MockGetRepoMockRecorder) GetFormColumns(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFormColumns", reflect.TypeOf((*MockGetRepo)(nil).GetFormColumns), ctx, id)
}

// GetFormRows mocks base method.
func (m *MockGetRepo) GetFormRows(ctx context.Context, id int) ([][]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFormRows", ctx, id)
	ret0, _ := ret[0].([][]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFormRows indicates an expected call of GetFormRows.
func (mr *MockGetRepoMockRecorder) GetFormRows(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFormRows", reflect.TypeOf((*MockGetRepo)(nil).GetFormRows), ctx, id)
}

// GetInstitutionFromINN mocks base method.
func (m *MockGetRepo) GetInstitutionFromINN(ctx context.Context, inn int) (entities.Institution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstitutionFromINN", ctx, inn)
	ret0, _ := ret[0].(entities.Institution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstitutionFromINN indicates an expected call of GetInstitutionFromINN.
func (mr *MockGetRepoMockRecorder) GetInstitutionFromINN(ctx, inn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstitutionFromINN", reflect.TypeOf((*MockGetRepo)(nil).GetInstitutionFromINN), ctx, inn)
}

// GetInstitutions mocks base method.
func (m *MockGetRepo) GetInstitutions(ctx context.Context) ([]entities.Institution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstitutions", ctx)
	ret0, _ := ret[0].([]entities.Institution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstitutions indicates an expected call of GetInstitutions.
func (mr *MockGetRepoMockRecorder) GetInstitutions(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstitutions", reflect.TypeOf((*MockGetRepo)(nil).GetInstitutions), ctx)
}

// GetMentors mocks base method.
func (m *MockGetRepo) GetMentors(ctx context.Context) ([]entities.Mentor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMentors", ctx)
	ret0, _ := ret[0].([]entities.Mentor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMentors indicates an expected call of GetMentors.
func (mr *MockGetRepoMockRecorder) GetMentors(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMentors", reflect.TypeOf((*MockGetRepo)(nil).GetMentors), ctx)
}
